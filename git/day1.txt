**Git 이란 ? 
 - 버전관리 시스템의 종류 중 하나 !

✔ 버전관리
 - 여러 파일을 하나의 버전으로 묶어 관리하는 것

 *버전관리 시스템의 종류
 1. 클라이언트(개발자) - 서버 모델 
    - 하나의 중앙 서버로 여러 클라이언트들이 각자 필요한 것만 가져와서 작업을 하고 다시 중앙 서버로 보내서 통합하는 방식 
    - 모델명: CVS, SVN

 2. 분산 모델 
    - 하나의 중앙서버가 존재하지만, 여러 클라이언트들은 각자의 컴퓨터 저장소에 전체 사본을 가지고 작업하는 방식 
    - 모델명: Git

 *Git의 장점
 1. 동시에 작업하는 사람들과 소스코드를 주고 받을 필요가 없음. 
 2. 같은 파일을 여러명이 병렬 개발이 가능하다. 
 3. 변동 과정을 체계적으로 관리할 수 있고, 언제든지 지난 시점의 버전으로 되돌릴 수 있음
 4. 인터넷이 연결 되지 않은 곳에서도 개발을 진행할 수 있고 중앙 서버의 데이터가 유실되어도 다시 복구할 수 있음 

 *Git 설치법 (https://git-scm.com/)
 1. 구글에서 'git설치' 검색
 2. 왼쪽 메뉴에서 Download 클릭 -> windows 64bit 으로 설치 
 3. 설정은 다 그냥 [기본설정]으로 설치 "다음"...."다음"눌러서 설치 하기 [설정은 나중에 따로 해줄수 있다 !]

 *Git 명령어
  감시하는 폴더(.git)을 먼저 생성해줘야한다. 
  1. 프로젝트 디렉토리 내에 로컬 저장소를 생성
        git init

  2. git 으로 버전 관리할 파일을 선택 하기 !!("stage에 올린다!"라고 생각하면 된다!)
            [stage에 올려놓고 기다린다.... 대기중....]
            // index.html파일을 stage에 올려서 대기 시키겠다!
        git add index.html 

  3. 하나의 버전으로 만들기 "버전에 대한 설명"
        git commit -m "index.html을 커밋"

    ✔user.email , user.name 설정해달라고 "에러"가 발생되면 아래 명령어를 입력하여 해결하기!
        git config --global user.email "이메일주소"
        git config --global user.name "이름"
    
    ✔ 만약 이메일을 잘 못 입력한 경우
        git config --global user.email "변경할 이메일"
    
    ✔ 잘입력 되었는지 확인법
        git config user.email

  4. 로그 확인하기
        git log

✔ README.md파일 
 - 깃허브에 업로드시 프로젝트 메인 설명글로 남길 수 있다!
 - 마크다운 문법으로 작성 해야한다!
    마크다운 기초문법
        1. 제목
            # 제목          <h1></h1>
            ## 제목         <h2></h2>
            ...
            #6개까지 가능 
        2. 강조 
            *이탤릭체*  또는  _이탤릭체_
            **볼드체**
            **_이탤릭체와 볼드체를 동시에_**
            ~~취소선~~
            <ul>밑줄</ul>
        3. 목록
            순서가 필요할 때 
            "1.": 순서가 필요한 목록 
            예) 1. 첫번째 목록 
                2. 두번쨰 목록 
                ....
            "-": 순서가 필요하지 않은 목록 
            예) - 순서 없어요
                - 그냥적어요
                ....
        4. 링크
            [클릭할 문자열](URL)
            ㅇㅖ) [google](https://www.google.com)

        5. 코드 작성
            ```
                프로그램 코드작성
            ```

  5. 여러 파일을 함께 선택 (stage에 현재 디렉토리에 있는 변화된 모든 파일을 선택하기 !)
    - 한번 올라가 있는 파일중 변화가 되어 있지 않은 파일은 선택이 되지 않는다 !!!
        // 모든 파일을 stage에 올리겠다~
        git add . 

  6. 선택된 여러 파일을 커밋 시키기 !
        git commit -m "현재 디렉토리에 있는 모든 파일을 커밋"


 * GitHub(깃허브)
  - https://github.com/
  - git으로 버전 관리한 코드를 업로드 할 수 있는 클라우드 서비스
  - 단순히 저장만 하는것이 아니라 유저들과 함께 코드를 공유하고 온라인으로 하나의 프로젝트를 개발할 수 있게 해줌. 

7. 깃허브 가입 후 repository 만들기 
    홈페이지에서 Create repository 버튼을 클릭해서 생성

8. 로컬 저장소에서 github 저장소 주소를 설정하기 
        git remote add origin https://github.com/SangDal/test.git

9. 생서한 커밋(버전들)들을 github로 전송(push)
        //위 주소에 push해주겠다 ~ 
        git push -u origin master